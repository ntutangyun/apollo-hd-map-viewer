{"version":3,"file":"1.bundle.js","sources":["webpack:///./components/Navigation/BaiduMapAdapter.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _coordinate_converter = require('utils/coordinate_converter');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BaiduMapAdapter = function () {\n  function BaiduMapAdapter() {\n    (0, _classCallCheck3.default)(this, BaiduMapAdapter);\n\n    this.map = null;\n    this.controls = [];\n    this.initializedCenter = false;\n  }\n\n  (0, _createClass3.default)(BaiduMapAdapter, [{\n    key: 'isInitialized',\n    value: function isInitialized() {\n      return this.map !== null && (0, _keys2.default)(this.map).length > 0;\n    }\n  }, {\n    key: 'loadMap',\n    value: function loadMap(initPoint, divElementName) {\n      this.map = new BMap.Map(divElementName, { enableMapClick: false });\n\n      this.map.enableScrollWheelZoom();\n      this.map.addControl(new BMap.MapTypeControl({\n        anchor: BMAP_ANCHOR_TOP_LEFT,\n        type: BMAP_NAVIGATION_CONTROL_SMALL\n      }));\n      this.map.addControl(new BMap.NavigationControl({\n        anchor: BMAP_ANCHOR_BOTTOM_RIGHT,\n        type: BMAP_NAVIGATION_CONTROL_SMALL,\n        enableGeolocation: false\n      }));\n    }\n  }, {\n    key: 'setCenter',\n    value: function setCenter(point) {\n      if (this.initializedCenter) {\n        this.map.setCenter(point);\n      } else {\n        this.map.centerAndZoom(point, 19);\n        this.initializedCenter = true;\n      }\n    }\n  }, {\n    key: 'setZoom',\n    value: function setZoom(zoom) {\n      this.map.setZoom(zoom);\n    }\n  }, {\n    key: 'addEventHandler',\n    value: function addEventHandler(eventName, handlerFunction) {\n      this.map.addEventListener(eventName, function (event) {\n        var clickedLatLng = event.point;\n        handlerFunction(clickedLatLng);\n      });\n    }\n  }, {\n    key: 'createPoint',\n    value: function createPoint(_ref) {\n      var lat = _ref.lat,\n          lng = _ref.lng;\n\n      return new BMap.Point(lng, lat);\n    }\n  }, {\n    key: 'createMarker',\n    value: function createMarker(point, title) {\n      var draggable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      var label = null;\n      if (title) {\n        label = new BMap.Label(title, {\n          point: point,\n          offset: new BMap.Size(15, -15)\n        });\n      }\n\n      var marker = new BMap.Marker(point, {\n        label: label,\n        enableDragging: draggable,\n        rotation: 5\n      });\n      marker.setLabel(label);\n      this.map.addOverlay(marker);\n      return marker;\n    }\n  }, {\n    key: 'createPolyline',\n    value: function createPolyline(path, color) {\n      var opacity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.0;\n      var weight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2.0;\n\n      var options = {\n        geodesic: true,\n        strokeColor: color,\n        strokeOpacity: opacity,\n        strokeWeight: weight\n      };\n      var polyline = new BMap.Polyline(path, options);\n      this.map.addOverlay(polyline);\n      return polyline;\n    }\n  }, {\n    key: 'createControl',\n    value: function createControl(_ref2) {\n      var text = _ref2.text,\n          tip = _ref2.tip,\n          color = _ref2.color,\n          offsetX = _ref2.offsetX,\n          offsetY = _ref2.offsetY,\n          onClickHandler = _ref2.onClickHandler;\n\n      var myControl = new NavigationControl(text, tip, color, new BMap.Size(offsetX, offsetY), onClickHandler);\n      this.map.addControl(myControl);\n      this.controls.push(myControl);\n    }\n  }, {\n    key: 'disableControls',\n    value: function disableControls() {\n      var _this = this;\n\n      this.controls.forEach(function (control) {\n        _this.map.removeControl(control);\n      });\n    }\n  }, {\n    key: 'enableControls',\n    value: function enableControls() {\n      var _this2 = this;\n\n      this.controls.forEach(function (control) {\n        _this2.map.addControl(control);\n      });\n    }\n  }, {\n    key: 'getMarkerPosition',\n    value: function getMarkerPosition(marker) {\n      return marker.getPosition();\n    }\n  }, {\n    key: 'updatePolyline',\n    value: function updatePolyline(polyline, newPath) {\n      polyline.setPath(newPath);\n    }\n  }, {\n    key: 'removePolyline',\n    value: function removePolyline(polyline) {\n      this.map.removeOverlay(polyline);\n    }\n  }, {\n    key: 'applyCoordinateOffset',\n    value: function applyCoordinateOffset(_ref3) {\n      var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),\n          lng = _ref4[0],\n          lat = _ref4[1];\n\n      return (0, _coordinate_converter.WGS84ToBD09LL)(lng, lat);\n    }\n  }]);\n  return BaiduMapAdapter;\n}();\n\nexports.default = BaiduMapAdapter;\n\nvar NavigationControl = function (_BMap$Control) {\n  (0, _inherits3.default)(NavigationControl, _BMap$Control);\n\n  function NavigationControl(text, tip, color, offset, onClickHandler) {\n    var _ref5;\n\n    (0, _classCallCheck3.default)(this, NavigationControl);\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    var _this3 = (0, _possibleConstructorReturn3.default)(this, (_ref5 = NavigationControl.__proto__ || (0, _getPrototypeOf2.default)(NavigationControl)).call.apply(_ref5, [this].concat(args)));\n\n    _this3.defaultAnchor = BMAP_ANCHOR_TOP_LEFT;\n    _this3.defaultOffset = offset;\n    _this3.onClickHandler = onClickHandler;\n    _this3.title = tip;\n    _this3.text = text;\n    _this3.backgroundColor = color;\n    return _this3;\n  }\n\n  (0, _createClass3.default)(NavigationControl, [{\n    key: 'initialize',\n    value: function initialize(map) {\n      var _this4 = this;\n\n      var controlDiv = document.createElement('div');\n\n      // Set CSS for the control border.\n      var controlUI = document.createElement('div');\n      controlUI.style.backgroundColor = this.backgroundColor;\n      controlUI.style.border = '2px solid #fff';\n      controlUI.style.borderRadius = '3px';\n      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';\n      controlUI.style.cursor = 'pointer';\n      controlUI.style.marginBottom = '22px';\n      controlUI.style.textAlign = 'center';\n      controlUI.title = this.title;\n      controlDiv.appendChild(controlUI);\n\n      // // Set CSS for the control interior.\n      var controlText = document.createElement('div');\n      controlText.style.color = 'rgb(25,25,25)';\n      controlText.style.fontFamily = 'Roboto,Arial,sans-serif';\n      controlText.style.fontSize = '16px';\n      controlText.style.lineHeight = '38px';\n      controlText.style.paddingLeft = '5px';\n      controlText.style.paddingRight = '5px';\n      controlText.innerHTML = this.text;\n      controlUI.appendChild(controlText);\n\n      map.getContainer().appendChild(controlDiv);\n\n      controlUI.addEventListener('click', function () {\n        _this4.onClickHandler(controlText);\n      });\n\n      return controlDiv;\n    }\n  }]);\n  return NavigationControl;\n}(BMap.Control);"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}