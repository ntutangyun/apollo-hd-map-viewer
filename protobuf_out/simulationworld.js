// source: modules/dreamview/proto/simulation_world.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.apollo.dreamview.SimulationWorld');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.apollo.common.Path');
goog.require('proto.apollo.common.monitor.MonitorMessage');
goog.require('proto.apollo.dreamview.ControlData');
goog.require('proto.apollo.dreamview.DelaysInMs');
goog.require('proto.apollo.dreamview.Latency');
goog.require('proto.apollo.dreamview.MapElementIds');
goog.require('proto.apollo.dreamview.Notification');
goog.require('proto.apollo.dreamview.Object');
goog.require('proto.apollo.dreamview.RoutePath');
goog.require('proto.apollo.dreamview.SensorMeasurements');
goog.require('proto.apollo.perception.LaneMarkers');
goog.require('proto.apollo.planning_internal.PlanningData');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apollo.dreamview.SimulationWorld = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apollo.dreamview.SimulationWorld.repeatedFields_, null);
};
goog.inherits(proto.apollo.dreamview.SimulationWorld, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apollo.dreamview.SimulationWorld.displayName = 'proto.apollo.dreamview.SimulationWorld';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apollo.dreamview.SimulationWorld.repeatedFields_ = [3,6,8,14,24,27];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.toObject = function(opt_includeInstance) {
  return proto.apollo.dreamview.SimulationWorld.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apollo.dreamview.SimulationWorld} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.dreamview.SimulationWorld.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    sequenceNum: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    objectList: jspb.Message.toObjectList(msg.getObjectList(),
    proto.apollo.dreamview.Object.toObject, includeInstance),
    autoDrivingCar: (f = msg.getAutoDrivingCar()) && proto.apollo.dreamview.Object.toObject(includeInstance, f),
    trafficSignal: (f = msg.getTrafficSignal()) && proto.apollo.dreamview.Object.toObject(includeInstance, f),
    routePathList: jspb.Message.toObjectList(msg.getRoutePathList(),
    proto.apollo.dreamview.RoutePath.toObject, includeInstance),
    routingTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    planningTrajectoryList: jspb.Message.toObjectList(msg.getPlanningTrajectoryList(),
    proto.apollo.dreamview.Object.toObject, includeInstance),
    mainStop: (f = msg.getMainStop()) && proto.apollo.dreamview.Object.toObject(includeInstance, f),
    mainDecision: (f = msg.getMainDecision()) && proto.apollo.dreamview.Object.toObject(includeInstance, f),
    speedLimit: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    delay: (f = msg.getDelay()) && proto.apollo.dreamview.DelaysInMs.toObject(includeInstance, f),
    monitor: (f = msg.getMonitor()) && proto.apollo.common.monitor.MonitorMessage.toObject(includeInstance, f),
    notificationList: jspb.Message.toObjectList(msg.getNotificationList(),
    proto.apollo.dreamview.Notification.toObject, includeInstance),
    engageAdvice: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    latencyMap: (f = msg.getLatencyMap()) ? f.toObject(includeInstance, proto.apollo.dreamview.Latency.toObject) : [],
    mapElementIds: (f = msg.getMapElementIds()) && proto.apollo.dreamview.MapElementIds.toObject(includeInstance, f),
    mapHash: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    mapRadius: (f = jspb.Message.getOptionalFloatingPointField(msg, 19)) == null ? undefined : f,
    planningData: (f = msg.getPlanningData()) && proto.apollo.planning_internal.PlanningData.toObject(includeInstance, f),
    gps: (f = msg.getGps()) && proto.apollo.dreamview.Object.toObject(includeInstance, f),
    laneMarker: (f = msg.getLaneMarker()) && proto.apollo.perception.LaneMarkers.toObject(includeInstance, f),
    controlData: (f = msg.getControlData()) && proto.apollo.dreamview.ControlData.toObject(includeInstance, f),
    navigationPathList: jspb.Message.toObjectList(msg.getNavigationPathList(),
    proto.apollo.common.Path.toObject, includeInstance),
    isRssSafe: jspb.Message.getBooleanFieldWithDefault(msg, 25, true),
    shadowLocalization: (f = msg.getShadowLocalization()) && proto.apollo.dreamview.Object.toObject(includeInstance, f),
    perceivedSignalList: jspb.Message.toObjectList(msg.getPerceivedSignalList(),
    proto.apollo.dreamview.Object.toObject, includeInstance),
    storiesMap: (f = msg.getStoriesMap()) ? f.toObject(includeInstance, undefined) : [],
    sensorMeasurementsMap: (f = msg.getSensorMeasurementsMap()) ? f.toObject(includeInstance, proto.apollo.dreamview.SensorMeasurements.toObject) : [],
    isSirenOn: jspb.Message.getBooleanFieldWithDefault(msg, 30, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SimulationWorld as accepted by the `fromObject` method.
 * @record
 */
proto.apollo.dreamview.SimulationWorld.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.timestamp;

  /** @type {?|undefined} */
  this.sequenceNum;

  /** @type {?|undefined} */
  this.objectList;

  /** @type {?|undefined} */
  this.autoDrivingCar;

  /** @type {?|undefined} */
  this.trafficSignal;

  /** @type {?|undefined} */
  this.routePathList;

  /** @type {?|undefined} */
  this.routingTime;

  /** @type {?|undefined} */
  this.planningTrajectoryList;

  /** @type {?|undefined} */
  this.mainStop;

  /** @type {?|undefined} */
  this.mainDecision;

  /** @type {?|undefined} */
  this.speedLimit;

  /** @type {?|undefined} */
  this.delay;

  /** @type {?|undefined} */
  this.monitor;

  /** @type {?|undefined} */
  this.notificationList;

  /** @type {?|undefined} */
  this.engageAdvice;

  /** @type {?|undefined} */
  this.latencyMap;

  /** @type {?|undefined} */
  this.mapElementIds;

  /** @type {?|undefined} */
  this.mapHash;

  /** @type {?|undefined} */
  this.mapRadius;

  /** @type {?|undefined} */
  this.planningData;

  /** @type {?|undefined} */
  this.gps;

  /** @type {?|undefined} */
  this.laneMarker;

  /** @type {?|undefined} */
  this.controlData;

  /** @type {?|undefined} */
  this.navigationPathList;

  /** @type {?|undefined} */
  this.isRssSafe;

  /** @type {?|undefined} */
  this.shadowLocalization;

  /** @type {?|undefined} */
  this.perceivedSignalList;

  /** @type {?|undefined} */
  this.storiesMap;

  /** @type {?|undefined} */
  this.sensorMeasurementsMap;

  /** @type {?|undefined} */
  this.isSirenOn;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.apollo.dreamview.SimulationWorld.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.apollo.dreamview.SimulationWorld}
 */
proto.apollo.dreamview.SimulationWorld.fromObject = function(obj) {
  var msg = new proto.apollo.dreamview.SimulationWorld();
  obj.timestamp != null && jspb.Message.setField(msg, 1, obj.timestamp);
  obj.sequenceNum != null && jspb.Message.setField(msg, 2, obj.sequenceNum);
  obj.objectList && jspb.Message.setRepeatedWrapperField(
      msg, 3, obj.objectList.map(
          proto.apollo.dreamview.Object.fromObject));
  obj.autoDrivingCar && jspb.Message.setWrapperField(
      msg, 4, proto.apollo.dreamview.Object.fromObject(obj.autoDrivingCar));
  obj.trafficSignal && jspb.Message.setWrapperField(
      msg, 5, proto.apollo.dreamview.Object.fromObject(obj.trafficSignal));
  obj.routePathList && jspb.Message.setRepeatedWrapperField(
      msg, 6, obj.routePathList.map(
          proto.apollo.dreamview.RoutePath.fromObject));
  obj.routingTime != null && jspb.Message.setField(msg, 7, obj.routingTime);
  obj.planningTrajectoryList && jspb.Message.setRepeatedWrapperField(
      msg, 8, obj.planningTrajectoryList.map(
          proto.apollo.dreamview.Object.fromObject));
  obj.mainStop && jspb.Message.setWrapperField(
      msg, 9, proto.apollo.dreamview.Object.fromObject(obj.mainStop));
  obj.mainDecision && jspb.Message.setWrapperField(
      msg, 10, proto.apollo.dreamview.Object.fromObject(obj.mainDecision));
  obj.speedLimit != null && jspb.Message.setField(msg, 11, obj.speedLimit);
  obj.delay && jspb.Message.setWrapperField(
      msg, 12, proto.apollo.dreamview.DelaysInMs.fromObject(obj.delay));
  obj.monitor && jspb.Message.setWrapperField(
      msg, 13, proto.apollo.common.monitor.MonitorMessage.fromObject(obj.monitor));
  obj.notificationList && jspb.Message.setRepeatedWrapperField(
      msg, 14, obj.notificationList.map(
          proto.apollo.dreamview.Notification.fromObject));
  obj.engageAdvice != null && jspb.Message.setField(msg, 15, obj.engageAdvice);
  obj.latencyMap && jspb.Message.setWrapperField(
      msg, 16, jspb.Map.fromObject(obj.latencyMap, proto.apollo.dreamview.Latency, proto.apollo.dreamview.Latency.fromObject));
  obj.mapElementIds && jspb.Message.setWrapperField(
      msg, 17, proto.apollo.dreamview.MapElementIds.fromObject(obj.mapElementIds));
  obj.mapHash != null && jspb.Message.setField(msg, 18, obj.mapHash);
  obj.mapRadius != null && jspb.Message.setField(msg, 19, obj.mapRadius);
  obj.planningData && jspb.Message.setWrapperField(
      msg, 20, proto.apollo.planning_internal.PlanningData.fromObject(obj.planningData));
  obj.gps && jspb.Message.setWrapperField(
      msg, 21, proto.apollo.dreamview.Object.fromObject(obj.gps));
  obj.laneMarker && jspb.Message.setWrapperField(
      msg, 22, proto.apollo.perception.LaneMarkers.fromObject(obj.laneMarker));
  obj.controlData && jspb.Message.setWrapperField(
      msg, 23, proto.apollo.dreamview.ControlData.fromObject(obj.controlData));
  obj.navigationPathList && jspb.Message.setRepeatedWrapperField(
      msg, 24, obj.navigationPathList.map(
          proto.apollo.common.Path.fromObject));
  obj.isRssSafe != null && jspb.Message.setField(msg, 25, obj.isRssSafe);
  obj.shadowLocalization && jspb.Message.setWrapperField(
      msg, 26, proto.apollo.dreamview.Object.fromObject(obj.shadowLocalization));
  obj.perceivedSignalList && jspb.Message.setRepeatedWrapperField(
      msg, 27, obj.perceivedSignalList.map(
          proto.apollo.dreamview.Object.fromObject));
  obj.storiesMap && jspb.Message.setField(msg, 28, obj.storiesMap);
  obj.sensorMeasurementsMap && jspb.Message.setWrapperField(
      msg, 29, jspb.Map.fromObject(obj.sensorMeasurementsMap, proto.apollo.dreamview.SensorMeasurements, proto.apollo.dreamview.SensorMeasurements.fromObject));
  obj.isSirenOn != null && jspb.Message.setField(msg, 30, obj.isSirenOn);
  return msg;
};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apollo.dreamview.SimulationWorld}
 */
proto.apollo.dreamview.SimulationWorld.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apollo.dreamview.SimulationWorld;
  return proto.apollo.dreamview.SimulationWorld.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apollo.dreamview.SimulationWorld} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apollo.dreamview.SimulationWorld}
 */
proto.apollo.dreamview.SimulationWorld.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSequenceNum(value);
      break;
    case 3:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.addObject(value);
      break;
    case 4:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.setAutoDrivingCar(value);
      break;
    case 5:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.setTrafficSignal(value);
      break;
    case 6:
      var value = new proto.apollo.dreamview.RoutePath;
      reader.readMessage(value,proto.apollo.dreamview.RoutePath.deserializeBinaryFromReader);
      msg.addRoutePath(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRoutingTime(value);
      break;
    case 8:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.addPlanningTrajectory(value);
      break;
    case 9:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.setMainStop(value);
      break;
    case 10:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.setMainDecision(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpeedLimit(value);
      break;
    case 12:
      var value = new proto.apollo.dreamview.DelaysInMs;
      reader.readMessage(value,proto.apollo.dreamview.DelaysInMs.deserializeBinaryFromReader);
      msg.setDelay(value);
      break;
    case 13:
      var value = new proto.apollo.common.monitor.MonitorMessage;
      reader.readMessage(value,proto.apollo.common.monitor.MonitorMessage.deserializeBinaryFromReader);
      msg.setMonitor(value);
      break;
    case 14:
      var value = new proto.apollo.dreamview.Notification;
      reader.readMessage(value,proto.apollo.dreamview.Notification.deserializeBinaryFromReader);
      msg.addNotification(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setEngageAdvice(value);
      break;
    case 16:
      var value = msg.getLatencyMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.apollo.dreamview.Latency.deserializeBinaryFromReader, "", new proto.apollo.dreamview.Latency());
         });
      break;
    case 17:
      var value = new proto.apollo.dreamview.MapElementIds;
      reader.readMessage(value,proto.apollo.dreamview.MapElementIds.deserializeBinaryFromReader);
      msg.setMapElementIds(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMapHash(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMapRadius(value);
      break;
    case 20:
      var value = new proto.apollo.planning_internal.PlanningData;
      reader.readMessage(value,proto.apollo.planning_internal.PlanningData.deserializeBinaryFromReader);
      msg.setPlanningData(value);
      break;
    case 21:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.setGps(value);
      break;
    case 22:
      var value = new proto.apollo.perception.LaneMarkers;
      reader.readMessage(value,proto.apollo.perception.LaneMarkers.deserializeBinaryFromReader);
      msg.setLaneMarker(value);
      break;
    case 23:
      var value = new proto.apollo.dreamview.ControlData;
      reader.readMessage(value,proto.apollo.dreamview.ControlData.deserializeBinaryFromReader);
      msg.setControlData(value);
      break;
    case 24:
      var value = new proto.apollo.common.Path;
      reader.readMessage(value,proto.apollo.common.Path.deserializeBinaryFromReader);
      msg.addNavigationPath(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRssSafe(value);
      break;
    case 26:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.setShadowLocalization(value);
      break;
    case 27:
      var value = new proto.apollo.dreamview.Object;
      reader.readMessage(value,proto.apollo.dreamview.Object.deserializeBinaryFromReader);
      msg.addPerceivedSignal(value);
      break;
    case 28:
      var value = msg.getStoriesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    case 29:
      var value = msg.getSensorMeasurementsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.apollo.dreamview.SensorMeasurements.deserializeBinaryFromReader, "", new proto.apollo.dreamview.SensorMeasurements());
         });
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSirenOn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apollo.dreamview.SimulationWorld.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apollo.dreamview.SimulationWorld.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apollo.dreamview.SimulationWorld} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apollo.dreamview.SimulationWorld.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getObjectList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getAutoDrivingCar();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getTrafficSignal();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getRoutePathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.apollo.dreamview.RoutePath.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getPlanningTrajectoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getMainStop();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getMainDecision();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getDelay();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.apollo.dreamview.DelaysInMs.serializeBinaryToWriter
    );
  }
  f = message.getMonitor();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.apollo.common.monitor.MonitorMessage.serializeBinaryToWriter
    );
  }
  f = message.getNotificationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.apollo.dreamview.Notification.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLatencyMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(16, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.apollo.dreamview.Latency.serializeBinaryToWriter);
  }
  f = message.getMapElementIds();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.apollo.dreamview.MapElementIds.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getPlanningData();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.apollo.planning_internal.PlanningData.serializeBinaryToWriter
    );
  }
  f = message.getGps();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getLaneMarker();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.apollo.perception.LaneMarkers.serializeBinaryToWriter
    );
  }
  f = message.getControlData();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.apollo.dreamview.ControlData.serializeBinaryToWriter
    );
  }
  f = message.getNavigationPathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      proto.apollo.common.Path.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getShadowLocalization();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getPerceivedSignalList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      27,
      f,
      proto.apollo.dreamview.Object.serializeBinaryToWriter
    );
  }
  f = message.getStoriesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(28, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getSensorMeasurementsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(29, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.apollo.dreamview.SensorMeasurements.serializeBinaryToWriter);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
};


/**
 * optional double timestamp = 1;
 * @return {number}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 sequence_num = 2;
 * @return {number}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getSequenceNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setSequenceNum = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearSequenceNum = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasSequenceNum = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Object object = 3;
 * @return {!Array<!proto.apollo.dreamview.Object>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getObjectList = function() {
  return /** @type{!Array<!proto.apollo.dreamview.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.dreamview.Object, 3));
};


/**
 * @param {!Array<!proto.apollo.dreamview.Object>} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setObjectList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.apollo.dreamview.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.addObject = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.apollo.dreamview.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearObjectList = function() {
  return this.setObjectList([]);
};


/**
 * optional Object auto_driving_car = 4;
 * @return {?proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getAutoDrivingCar = function() {
  return /** @type{?proto.apollo.dreamview.Object} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.Object, 4));
};


/**
 * @param {?proto.apollo.dreamview.Object|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setAutoDrivingCar = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearAutoDrivingCar = function() {
  return this.setAutoDrivingCar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasAutoDrivingCar = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Object traffic_signal = 5;
 * @return {?proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getTrafficSignal = function() {
  return /** @type{?proto.apollo.dreamview.Object} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.Object, 5));
};


/**
 * @param {?proto.apollo.dreamview.Object|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setTrafficSignal = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearTrafficSignal = function() {
  return this.setTrafficSignal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasTrafficSignal = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated RoutePath route_path = 6;
 * @return {!Array<!proto.apollo.dreamview.RoutePath>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getRoutePathList = function() {
  return /** @type{!Array<!proto.apollo.dreamview.RoutePath>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.dreamview.RoutePath, 6));
};


/**
 * @param {!Array<!proto.apollo.dreamview.RoutePath>} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setRoutePathList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.apollo.dreamview.RoutePath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.dreamview.RoutePath}
 */
proto.apollo.dreamview.SimulationWorld.prototype.addRoutePath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.apollo.dreamview.RoutePath, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearRoutePathList = function() {
  return this.setRoutePathList([]);
};


/**
 * optional double routing_time = 7;
 * @return {number}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getRoutingTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setRoutingTime = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearRoutingTime = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasRoutingTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Object planning_trajectory = 8;
 * @return {!Array<!proto.apollo.dreamview.Object>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getPlanningTrajectoryList = function() {
  return /** @type{!Array<!proto.apollo.dreamview.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.dreamview.Object, 8));
};


/**
 * @param {!Array<!proto.apollo.dreamview.Object>} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setPlanningTrajectoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.apollo.dreamview.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.addPlanningTrajectory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.apollo.dreamview.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearPlanningTrajectoryList = function() {
  return this.setPlanningTrajectoryList([]);
};


/**
 * optional Object main_stop = 9;
 * @return {?proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getMainStop = function() {
  return /** @type{?proto.apollo.dreamview.Object} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.Object, 9));
};


/**
 * @param {?proto.apollo.dreamview.Object|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setMainStop = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearMainStop = function() {
  return this.setMainStop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasMainStop = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Object main_decision = 10;
 * @return {?proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getMainDecision = function() {
  return /** @type{?proto.apollo.dreamview.Object} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.Object, 10));
};


/**
 * @param {?proto.apollo.dreamview.Object|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setMainDecision = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearMainDecision = function() {
  return this.setMainDecision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasMainDecision = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double speed_limit = 11;
 * @return {number}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getSpeedLimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setSpeedLimit = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearSpeedLimit = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasSpeedLimit = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DelaysInMs delay = 12;
 * @return {?proto.apollo.dreamview.DelaysInMs}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getDelay = function() {
  return /** @type{?proto.apollo.dreamview.DelaysInMs} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.DelaysInMs, 12));
};


/**
 * @param {?proto.apollo.dreamview.DelaysInMs|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setDelay = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearDelay = function() {
  return this.setDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasDelay = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional apollo.common.monitor.MonitorMessage monitor = 13;
 * @return {?proto.apollo.common.monitor.MonitorMessage}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getMonitor = function() {
  return /** @type{?proto.apollo.common.monitor.MonitorMessage} */ (
    jspb.Message.getWrapperField(this, proto.apollo.common.monitor.MonitorMessage, 13));
};


/**
 * @param {?proto.apollo.common.monitor.MonitorMessage|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setMonitor = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearMonitor = function() {
  return this.setMonitor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasMonitor = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated Notification notification = 14;
 * @return {!Array<!proto.apollo.dreamview.Notification>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getNotificationList = function() {
  return /** @type{!Array<!proto.apollo.dreamview.Notification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.dreamview.Notification, 14));
};


/**
 * @param {!Array<!proto.apollo.dreamview.Notification>} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setNotificationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.apollo.dreamview.Notification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.dreamview.Notification}
 */
proto.apollo.dreamview.SimulationWorld.prototype.addNotification = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.apollo.dreamview.Notification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearNotificationList = function() {
  return this.setNotificationList([]);
};


/**
 * optional string engage_advice = 15;
 * @return {string}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getEngageAdvice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setEngageAdvice = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearEngageAdvice = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasEngageAdvice = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * map<string, Latency> latency = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.apollo.dreamview.Latency>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getLatencyMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.apollo.dreamview.Latency>} */ (
      jspb.Message.getMapField(this, 16, opt_noLazyCreate,
      proto.apollo.dreamview.Latency));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearLatencyMap = function() {
  this.getLatencyMap().clear();
  return this;};


/**
 * optional MapElementIds map_element_ids = 17;
 * @return {?proto.apollo.dreamview.MapElementIds}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getMapElementIds = function() {
  return /** @type{?proto.apollo.dreamview.MapElementIds} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.MapElementIds, 17));
};


/**
 * @param {?proto.apollo.dreamview.MapElementIds|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setMapElementIds = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearMapElementIds = function() {
  return this.setMapElementIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasMapElementIds = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 map_hash = 18;
 * @return {number}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getMapHash = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setMapHash = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearMapHash = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasMapHash = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double map_radius = 19;
 * @return {number}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getMapRadius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setMapRadius = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearMapRadius = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasMapRadius = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional apollo.planning_internal.PlanningData planning_data = 20;
 * @return {?proto.apollo.planning_internal.PlanningData}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getPlanningData = function() {
  return /** @type{?proto.apollo.planning_internal.PlanningData} */ (
    jspb.Message.getWrapperField(this, proto.apollo.planning_internal.PlanningData, 20));
};


/**
 * @param {?proto.apollo.planning_internal.PlanningData|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setPlanningData = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearPlanningData = function() {
  return this.setPlanningData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasPlanningData = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Object gps = 21;
 * @return {?proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getGps = function() {
  return /** @type{?proto.apollo.dreamview.Object} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.Object, 21));
};


/**
 * @param {?proto.apollo.dreamview.Object|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setGps = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearGps = function() {
  return this.setGps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasGps = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional apollo.perception.LaneMarkers lane_marker = 22;
 * @return {?proto.apollo.perception.LaneMarkers}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getLaneMarker = function() {
  return /** @type{?proto.apollo.perception.LaneMarkers} */ (
    jspb.Message.getWrapperField(this, proto.apollo.perception.LaneMarkers, 22));
};


/**
 * @param {?proto.apollo.perception.LaneMarkers|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setLaneMarker = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearLaneMarker = function() {
  return this.setLaneMarker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasLaneMarker = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional ControlData control_data = 23;
 * @return {?proto.apollo.dreamview.ControlData}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getControlData = function() {
  return /** @type{?proto.apollo.dreamview.ControlData} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.ControlData, 23));
};


/**
 * @param {?proto.apollo.dreamview.ControlData|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setControlData = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearControlData = function() {
  return this.setControlData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasControlData = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * repeated apollo.common.Path navigation_path = 24;
 * @return {!Array<!proto.apollo.common.Path>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getNavigationPathList = function() {
  return /** @type{!Array<!proto.apollo.common.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.common.Path, 24));
};


/**
 * @param {!Array<!proto.apollo.common.Path>} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setNavigationPathList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.apollo.common.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.common.Path}
 */
proto.apollo.dreamview.SimulationWorld.prototype.addNavigationPath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.apollo.common.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearNavigationPathList = function() {
  return this.setNavigationPathList([]);
};


/**
 * optional bool is_rss_safe = 25;
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getIsRssSafe = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, true));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setIsRssSafe = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearIsRssSafe = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasIsRssSafe = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Object shadow_localization = 26;
 * @return {?proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getShadowLocalization = function() {
  return /** @type{?proto.apollo.dreamview.Object} */ (
    jspb.Message.getWrapperField(this, proto.apollo.dreamview.Object, 26));
};


/**
 * @param {?proto.apollo.dreamview.Object|undefined} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setShadowLocalization = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearShadowLocalization = function() {
  return this.setShadowLocalization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasShadowLocalization = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * repeated Object perceived_signal = 27;
 * @return {!Array<!proto.apollo.dreamview.Object>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getPerceivedSignalList = function() {
  return /** @type{!Array<!proto.apollo.dreamview.Object>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.apollo.dreamview.Object, 27));
};


/**
 * @param {!Array<!proto.apollo.dreamview.Object>} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
*/
proto.apollo.dreamview.SimulationWorld.prototype.setPerceivedSignalList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 27, value);
};


/**
 * @param {!proto.apollo.dreamview.Object=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apollo.dreamview.Object}
 */
proto.apollo.dreamview.SimulationWorld.prototype.addPerceivedSignal = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 27, opt_value, proto.apollo.dreamview.Object, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearPerceivedSignalList = function() {
  return this.setPerceivedSignalList([]);
};


/**
 * map<string, bool> stories = 28;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getStoriesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 28, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearStoriesMap = function() {
  this.getStoriesMap().clear();
  return this;};


/**
 * map<string, SensorMeasurements> sensor_measurements = 29;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.apollo.dreamview.SensorMeasurements>}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getSensorMeasurementsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.apollo.dreamview.SensorMeasurements>} */ (
      jspb.Message.getMapField(this, 29, opt_noLazyCreate,
      proto.apollo.dreamview.SensorMeasurements));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearSensorMeasurementsMap = function() {
  this.getSensorMeasurementsMap().clear();
  return this;};


/**
 * optional bool is_siren_on = 30;
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.getIsSirenOn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.setIsSirenOn = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.apollo.dreamview.SimulationWorld} returns this
 */
proto.apollo.dreamview.SimulationWorld.prototype.clearIsSirenOn = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apollo.dreamview.SimulationWorld.prototype.hasIsSirenOn = function() {
  return jspb.Message.getField(this, 30) != null;
};


